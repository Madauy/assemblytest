DATA:
  arr 7
      12
      4
      0
  len 4
  one 1
  temp 0
  min_pos 0
  max_pos 0

CODE:
  MOV B, arr    ; B = dirección base del arreglo
  MOV A, (len)  ; A = longitud del arreglo

MIN_MAX_SORT:
  CMP A, 0
  JLE END_SORT

  PUSH A
  PUSH B

  MOV A, (B)    ; Guardar mínimo en A
  MOV (min_pos), B
  MOV B, (B)    ; Guardar máximo en B
  MOV (max_pos), B
  MOV A, (len)  ; Preparar el contador del bucle
  MOV (temp), A

MIN_LOOP:
  MOV A, (temp)
  ADD A, (one)
  MOV (temp), A
  CMP A, (arr)
  JNE CONTINUE_MIN_LOOP

  JMP END_MIN_LOOP

CONTINUE_MIN_LOOP:
  CMP A, (arr)
  JGE UPDATE_MIN

  MOV (max_pos), A
  MOV A, (arr)

  JMP NEXT_ITERATION_MIN_LOOP

UPDATE_MIN:
  CMP A, (arr)
  JLE NEXT_ITERATION_MIN_LOOP

  MOV (min_pos), A
  MOV B, (arr)

NEXT_ITERATION_MIN_LOOP:
  ADD A, (one)
  MOV (temp), A
  JMP MIN_LOOP

END_MIN_LOOP:
  ; Swap min and first element
  MOV A, (arr)
  MOV B, (min_pos)
  MOV (min_pos), A
  MOV (arr), B

  ; Swap max and last element
  MOV B, (max_pos)
  MOV A, (len)
  ADD A, (arr)
  MOV A, (B)
  MOV B, (arr)
  MOV (arr), A
  MOV (max_pos), B

  POP B
  POP A
  SUB A, (one)
  MOV (len), A
  MOV A, (one)
  ADD A, (B)
  MOV B, A
  JMP MIN_MAX_SORT

END_SORT:
